<?xml version="1.0" encoding="UTF-8"?><sqlb_project><db path="C:/Users/suntrust/Desktop/projects/SQL- Professional - Music store/chinook_db/chinook.db" readonly="0" foreign_keys="1" case_sensitive_like="0" temp_store="0" wal_autocheckpoint="1000" synchronous="2"/><attached/><window><main_tabs open="structure browser pragmas query" current="3"/></window><tab_structure><column_width id="0" width="300"/><column_width id="1" width="0"/><column_width id="2" width="125"/><column_width id="3" width="5283"/><column_width id="4" width="0"/><expanded_item id="0" parent="1"/><expanded_item id="1" parent="1"/><expanded_item id="2" parent="1"/><expanded_item id="3" parent="1"/></tab_structure><tab_browse><current_table name="4,5:mainTrack"/><default_encoding codec=""/><browse_table_settings><table schema="main" name="Album" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort><column index="2" mode="0"/></sort><column_widths><column index="1" value="84"/><column index="2" value="300"/><column index="3" value="76"/></column_widths><filter_values><column index="3" value="142"/></filter_values><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="Artist" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort><column index="1" mode="0"/></sort><column_widths><column index="1" value="76"/><column index="2" value="300"/></column_widths><filter_values><column index="2" value="the ro"/></filter_values><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="Customer" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="111"/><column index="2" value="97"/><column index="3" value="105"/><column index="4" value="300"/><column index="5" value="300"/><column index="6" value="167"/><column index="7" value="55"/><column index="8" value="124"/><column index="9" value="106"/><column index="10" value="165"/><column index="11" value="157"/><column index="12" value="233"/><column index="13" value="131"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="Employee" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="112"/><column index="2" value="95"/><column index="3" value="97"/><column index="4" value="157"/><column index="5" value="98"/><column index="6" value="162"/><column index="7" value="162"/><column index="8" value="228"/><column index="9" value="85"/><column index="10" value="55"/><column index="11" value="78"/><column index="12" value="106"/><column index="13" value="148"/><column index="14" value="148"/><column index="15" value="214"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="Genre" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="80"/><column index="2" value="144"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="Invoice" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort><column index="8" mode="0"/></sort><column_widths><column index="1" value="93"/><column index="2" value="111"/><column index="3" value="162"/><column index="4" value="300"/><column index="5" value="167"/><column index="6" value="109"/><column index="7" value="132"/><column index="8" value="160"/><column index="9" value="53"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="InvoiceLine" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="129"/><column index="2" value="93"/><column index="3" value="75"/><column index="4" value="88"/><column index="5" value="84"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="Track" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="75"/><column index="2" value="300"/><column index="3" value="84"/><column index="4" value="121"/><column index="5" value="80"/><column index="6" value="300"/><column index="7" value="115"/><column index="8" value="79"/><column index="9" value="88"/></column_widths><filter_values><column index="3" value="218"/></filter_values><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table></browse_table_settings></tab_browse><tab_sql><sql name="Most listened genre for each contry">WITH all_s AS (
	select Invoice.BillingCountry Country, Genre.GenreId,Genre.name,count(invoice.InvoiceId) purchases
	 from Invoice
	 join InvoiceLine
	 on Invoice.InvoiceId=InvoiceLine.InvoiceId
	join Track
	on Track.TrackId=InvoiceLine.TrackId
	join Genre
	on Track.GenreId=Genre.GenreId
	group by 1,2)
SELECT all_s.*
from all_s
join ( select max(purchases)as maxi, Country , GenreId,name
		from all_s
		group by 2
		) bill_max
on bill_max.Country=all_s.Country
where bill_max.maxi=all_s.purchases</sql><sql name="most listened track">/* SQL query for most listened track */

select al.Title, t.name , a.Name,g.Name,max(i.total)
from invoice i
/* join tables until we reach to album and artist tables */
join InvoiceLine il
on il.InvoiceId=i.InvoiceId
join Track t
on il.TrackId=t.TrackId
join Genre g
on t.GenreId=g.GenreId
join Album al
on t.AlbumId=al.AlbumId
join Artist a
on a.ArtistId=al.ArtistId
group by t.AlbumId
/* There is TV Shows and Series identified as tracks so we have to extract songs by removing that extra genres*/
HAVING t.GenreId != 18 and t.GenreId != 19  and t.GenreId != 20  and t.GenreId != 21  and t.GenreId != 22  
order by 5 desc 
</sql><sql name="Most listened genre">/* Most listened genre*/
select g.Name ,count(i.total) as number_sold, round(total(i.total),2) as total_price
from invoice i
/* join tables until we reach to genre table */
join InvoiceLine il
on il.InvoiceId=i.InvoiceId
join Track t
on il.TrackId=t.TrackId
join Genre g
on t.GenreId=g.GenreId
group by 1
/* There is TV Shows and Series if we want to remove it just insert the next line*/
/* HAVING t.GenreId != 18 and t.GenreId != 19  and t.GenreId != 20  and t.GenreId != 21  and t.GenreId != 22 */
order by 2 desc </sql><sql name="email lists of all of the Customers">/* email lists of all of the Customers*/

select c.Email,c.FirstName,c.LastName,g.Name
from Customer c
join Invoice i
on c.CustomerId=i.CustomerId
join InvoiceLine il
on il.InvoiceId=i.InvoiceId
join track t
on t.TrackId=il.TrackId
join Genre g
on g.GenreId=t.GenreId
group by 2,3
order by 1</sql><sql name="longest songs (above average)">SELECT Name,Milliseconds
from Track
where Milliseconds &gt; (SELECT avg(Milliseconds)
					  from Track)
order by 2 desc
</sql><sql name="the customers who spent the most for their country">WITH spent AS (
SELECT c.FirstName client_first,c.LastName client_last,sum(i.total) all_spent,c.Country country ,c.CustomerId id
from Customer c
join Invoice i
on c.CustomerId=i.CustomerId
group by 5
)
SELECT spent.*
from spent
join ( select max(all_spent) total_spent,id
		from spent
		GROUP by Country) result
on spent.id=result.id
WHERE spent.all_spent=result.total_spent
order by country</sql><sql name="number of songs bought per customer">SELECT C.CustomerId,
       C.FirstName First_Name,
       C.LastName Last_Name,
       count(il.Quantity)
FROM InvoiceLine il
JOIN Invoice i ON il.InvoiceId=i.InvoiceId
JOIN Customer c ON i.CustomerId=c.CustomerId
GROUP BY 1
ORDER BY c.CustomerId

</sql><sql name="number of sold trackes per rock band">SELECT ar.Name,
       sum(i.Quantity) AS sold_tracks
FROM Track t
JOIN Album a ON t.AlbumId=a.AlbumId
JOIN Artist ar ON a.ArtistId=ar.ArtistId
JOIN InvoiceLine i ON i.TrackId=t.TrackId
group by 1
order by 2 desc

/* second solution instead of referring to rock by its id we can make it more dynamic by using genre column
 to be protected from any changes in genres ids in the future*/
/*join genre g
on t.GenreId=g.GenreId
where g.name='Rock'*/</sql><current_tab id="7"/></tab_sql></sqlb_project>
